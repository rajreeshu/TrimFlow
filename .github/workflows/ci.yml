name: DevSecOps Pipeline

on:
  push:
    branches:
      - master # Run the pipeline only for this branch

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt

      # Only the High-Priority Rules
      - name: Run Linter (Flake8)
        run: |
          pip install flake8
          flake8 --select=F401,F841,E999,F821,F632,E722,E402 --max-line-length=100 .
        continue-on-error: true

  security-scan:
    runs-on: ubuntu-latest
    needs: lint-and-test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # üõ°Ô∏è 1Ô∏è‚É£ Secret Scanning
      - name: Run Secret Scanning (Gitleaks)
        uses: gitleaks/gitleaks-action@v2
        continue-on-error: true

      - name: Install and Run Detect-Secrets
        run: |
          pip install detect-secrets
          detect-secrets scan --all-files | tee detect-secrets-report.json

      # üîç 2Ô∏è‚É£ Static Code Analysis (SAST)
      - name: Run Semgrep SAST
        uses: returntocorp/semgrep-action@v1
        with:
          config: "p/default"
        continue-on-error: true

      - name: Run CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: python

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      # üì¶ 3Ô∏è‚É£ Dependency Scanning
      - name: Run OWASP Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: "MyProject"
          path: "./"
          format: "HTML"
          out: "reports"

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: "monitor"

      # üê≥ 4Ô∏è‚É£ Container & OS Vulnerability Scanning
      - name: Run Trivy on Docker Image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "your-docker-image"
          format: "table"
          exit-code: "1"
          severity: "CRITICAL,HIGH"

      # Bandit Security Scan
      - name: Run Bandit Security Scan
        run: |
          pip install bandit
          bandit -r . -f json -o bandit-report.json

      # Semgrep Security Scan
      - name: Run Semgrep
        run: |
          semgrep --config p/ci --json --output semgrep-report.json
